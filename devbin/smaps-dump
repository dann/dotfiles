#!/usr/bin/perl
use warnings;
use strict;

my $parent_pid = shift || die "please supply parent PID";

use Linux::Smaps;

my $pstree_out = `/usr/bin/pstree -p $parent_pid`;
my @pids = ($pstree_out =~ /\((\d+)\)/sg);

die "must specify the parent process of a process tree"
    unless @pids > 1;

my $num_kids = @pids - 1;
my %total;
my $parent_smaps;
foreach my $pid (@pids) {
    my $smaps = Linux::Smaps->new($pid);
    die "failed for $pid" unless defined $smaps;
    if ($pid == $parent_pid) {
        $parent_smaps = $smaps;
        next;
    }
    foreach my $field (qw(size rss 
                          shared_dirty shared_clean
                          private_dirty private_clean))
    {
        $total{$field} += $smaps->$field;
    }
}

$total{private} = $total{private_dirty}+$total{private_clean};
$total{shared} = $total{shared_dirty}+$total{shared_clean};
$total{shared_avg} = $total{shared} / $num_kids;

print "parent\n";
print "  size:\t",$parent_smaps->size,$/;
print "  rss\t",$parent_smaps->rss,$/;
print "  private:\t",
      $parent_smaps->private_dirty + $parent_smaps->private_clean,$/;
print "  shared_clean:\t",$parent_smaps->shared_clean,$/;
print "  shared_dirty:\t",$parent_smaps->shared_dirty,$/;

print $/;

print "$num_kids kids:\n";
print "  $_:\t$total{$_}\n" for qw(size rss private 
                                   shared_avg shared_clean shared_dirty);

print $/;

my $real_usage = 
    $total{private} + $parent_smaps->private_dirty + 
    $parent_smaps->private_clean + $total{shared_avg};

print "estimated real memory usage: $real_usage\n";
